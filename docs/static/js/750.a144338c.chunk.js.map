{"version":3,"file":"static/js/750.a144338c.chunk.js","mappings":"+MAIMA,EAAgB,CACpBC,UAAW,uBACXC,SAAU,SACVC,cAAe,cACfC,SAAU,IACVC,KAAM,GAGFC,EAAW,WACf,IAAAC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GACpCI,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,UAYVC,GAAmBC,EAAAA,EAAAA,cAAY,SAACC,GAAW,IAADC,EAC9CC,QAAQC,IAAI,YAADC,OAAaJ,IACT,QAAfC,EAAAL,EAAQS,eAAO,IAAAJ,GAAfA,EAAiBK,eAAe,CAAEpB,KAAMc,GAC1C,GAAG,IAUH,OACEO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJF,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CACHC,IAAKhB,EACLiB,KAAK,QACLC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,IAERE,MAAO,CACLC,SAAU,KAEZC,cAAetC,EACfuC,SAxBW,SAACC,GAChBnB,QAAQC,IAAI,WAAYkB,GACxB3B,EAAS,YAAa,CAAE4B,MAAO,CAAEC,OAAQF,IAC3C,EAsBMG,eArBiB,SAACC,GACtBvB,QAAQC,IAAI,UAAWsB,EACzB,EAoBMC,aAAa,MAAKjB,SAAA,EAElBC,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CACRC,MAAM,iBACNf,KAAK,gBACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sCAEXtB,UAEFC,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,OAERtB,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CACRC,MAAM,WACNf,KAAK,WACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+BAEXtB,UAEFC,EAAAA,EAAAA,KAACsB,EAAAA,EAAMC,SAAQ,CACbC,iBAAkB,CAChBC,QAAS3C,EACT4C,gBAAiB3C,QAIvBiB,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CACRC,MAAM,YACNf,KAAK,WACLgB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,2BAEXtB,UAEFC,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,OAERtB,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CAACC,MAAM,SAASf,KAAK,YAAWJ,UACxCC,EAAAA,EAAAA,KAACsB,EAAAA,EAAK,OAERtB,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CAACC,MAAM,OAAOf,KAAK,OAAMJ,UACjCC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,SAAUxC,EAAkByC,QAzF1B,CAChB,CACEvC,MAAO,EACP4B,MAAO,QAET,CACE5B,MAAO,EACP4B,MAAO,kBAoFLlB,EAAAA,EAAAA,KAACC,EAAAA,EAAKgB,KAAI,CACRX,WAAY,CACVwB,OAAQ,EACRzB,KAAM,IACNN,UAEFC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQlC,SAAC,kBAOnD,EAEA,WAAemC,EAAAA,EAAAA,MAAKzD,E","sources":["pages/main/MainPage.js"],"sourcesContent":["import { memo, useState, useCallback, useRef } from 'react'\r\nimport { Input, Button, Select, Form } from 'antd'\r\nimport { useNavigate } from 'react-router'\r\n\r\nconst defaultValues = {\r\n  userEmail: 'joshua.lee@obigo.com',\r\n  userName: 'joshua',\r\n  meetingNumber: '85007139943',\r\n  passWord: 123,\r\n  role: 1,\r\n}\r\n\r\nconst MainPage = () => {\r\n  const [passwordVisible, setPasswordVisible] = useState(false)\r\n  const navigate = useNavigate()\r\n  const formRef = useRef()\r\n  const roleItems = [\r\n    {\r\n      value: 1,\r\n      label: 'host',\r\n    },\r\n    {\r\n      value: 0,\r\n      label: 'attendee',\r\n    },\r\n  ]\r\n\r\n  const handleRoleChange = useCallback((value) => {\r\n    console.log(`selected ${value}`)\r\n    formRef.current?.setFieldsValue({ role: value })\r\n  }, [])\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values)\r\n    navigate('/meetings', { state: { config: values } })\r\n  }\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>회의 참여</h1>\r\n      <Form\r\n        ref={formRef}\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n        initialValues={defaultValues}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"Meeting number\"\r\n          name=\"meetingNumber\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your meeting number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"passWord\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            visibilityToggle={{\r\n              visible: passwordVisible,\r\n              onVisibleChange: setPasswordVisible,\r\n            }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"User name\"\r\n          name=\"userName\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your Name',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"E-mail\" name=\"userEmail\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Role\" name=\"role\">\r\n          <Select onChange={handleRoleChange} options={roleItems} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(MainPage)\r\n"],"names":["defaultValues","userEmail","userName","meetingNumber","passWord","role","MainPage","_useState","useState","_useState2","_slicedToArray","passwordVisible","setPasswordVisible","navigate","useNavigate","formRef","useRef","handleRoleChange","useCallback","value","_formRef$current","console","log","concat","current","setFieldsValue","_jsxs","_Fragment","children","_jsx","Form","ref","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","onFinish","values","state","config","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","message","Input","Password","visibilityToggle","visible","onVisibleChange","Select","onChange","options","offset","Button","type","htmlType","memo"],"sourceRoot":""}